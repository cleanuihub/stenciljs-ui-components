{"version":3,"names":["searchBarCss","SearchBar","text","textChange","handleChange","event","input","target","this","value","emit","render","h","key","type","placeholder","onInput","searchButtonCss","SearchButton","buttonClick","handleClick","onClick"],"sources":["src/components/search-bar/search-bar.css?tag=search-bar&encapsulation=shadow","src/components/search-bar/search-bar.tsx","src/components/search-button/search-button.css?tag=search-button&encapsulation=shadow","src/components/search-button/search-button.tsx"],"sourcesContent":["input {\n  padding: 8px;\n  width: 200px;\n}\n","import { Component, State, Event, EventEmitter, h } from '@stencil/core';\n\n@Component({\n  tag: 'search-bar',\n  styleUrl: 'search-bar.css',\n  shadow: true,\n})\nexport class SearchBar {\n  @State() text: string = '';\n\n  @Event() textChange: EventEmitter<string>; // custom event to notify outer app\n\n  private handleChange = (event: Event) => {\n    const input = event.target as HTMLInputElement;\n    this.text = input.value;\n    this.textChange.emit(this.text); // send text to parent\n  };\n\n  render() {\n    return (\n      <input\n        type=\"text\"\n        placeholder=\"Search menu...\"\n        value={this.text}\n        onInput={this.handleChange}\n      />\n    );\n  }\n}\n","/* button {\n  padding: 8px 12px;\n  margin-left: 8px;\n  background-color: #0071dc;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #005bb5;\n} */\n \nbutton {\n  padding: 8px 12px;\n  margin-left: 8px;\n  background-color: var(--search-button-bg, #0071dc); /* ‚Üê fallback */\n  color: var(--search-button-color, white);\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: var(--search-button-bg-hover, #005bb5);\n}\n","import { Component, Event, EventEmitter, h } from '@stencil/core';\n\n@Component({\n  tag: 'search-button',\n  styleUrl: 'search-button.css',\n  shadow: true,\n})\nexport class SearchButton {\n  @Event() buttonClick: EventEmitter<void>;\n\n  private handleClick = () => {\n    this.buttonClick.emit(); // emit event to parent\n  };\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        üîç Search\n      </button>\n    );\n  }\n}\n"],"mappings":"kDAAA,MAAMA,EAAe,iC,MCORC,EAAS,M,8DACXC,KAAe,GAEfC,WAEDC,aAAgBC,IACtB,MAAMC,EAAQD,EAAME,OACpBC,KAAKN,KAAOI,EAAMG,MAClBD,KAAKL,WAAWO,KAAKF,KAAKN,KAAK,EAGjC,MAAAS,GACE,OACEC,EAAA,SAAAC,IAAA,2CACEC,KAAK,OACLC,YAAY,iBACZN,MAAOD,KAAKN,KACZc,QAASR,KAAKJ,c,aCxBtB,MAAMa,EAAkB,uP,MCOXC,EAAY,M,gEACdC,YAEDC,YAAc,KACpBZ,KAAKW,YAAYT,MAAM,EAGzB,MAAAC,GACE,OACEC,EAAA,UAAAC,IAAA,2CAAQQ,QAASb,KAAKY,aAEb,Y","ignoreList":[]}